# Copyright 2022 GlobalFoundries PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Regression testing

# Prevent keeping resources busy when a branch/PR is updated
# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1
  IMAGE: ghcr.io/${{ github.repository }}/test

jobs:


  BuildContainerImage:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Build container image
        run: |
          docker build -t "$IMAGE" -f- rules/klayout <<EOF
          FROM gcr.io/hdl-containers/klayout

          RUN apt-get update -qq \
           && DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends \
              make \
              procps \
              python3-pip \
           && apt-get autoclean && apt-get clean && apt-get -y autoremove \
           && rm -rf /var/lib/apt/lists/*

          RUN --mount=type=bind,target=/tmp/ctx pip3 install -r /tmp/ctx/requirements.test.txt
          EOF

      - name: Push container image to registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: pyTooling/Actions/with-post-step@r0
        with:
          main: |
            echo '${{ github.token }}' | docker login ghcr.io -u gha --password-stdin
            docker push "$IMAGE"
          post: docker logout ghcr.io


  Test:
    needs: BuildContainerImage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { pdk: drc, test: main }
          - { pdk: drc, test: switch }
          - { pdk: drc, test: gf180mcu_fd_io }
          - { pdk: drc, test: gf180mcu_fd_ip_sram }
          - { pdk: drc, test: gf180mcu_fd_sc_mcu7t5v0 }
          - { pdk: drc, test: gf180mcu_fd_sc_mcu9t5v0 }
          - { pdk: lvs, test: main }
          - { pdk: lvs, test: switch }
          - { pdk: lvs, test: gf180mcu_fd_sc_mcu7t5v0}
          - { pdk: lvs, test: gf180mcu_fd_sc_mcu9t5v0 }

    name: ${{ matrix.pdk }} | ${{ matrix.test }}

    steps:

      - uses: actions/checkout@v3

      - run: docker pull "$IMAGE"

      - name: Testing ${{ matrix.type }} for ${{ matrix.test }}
        run: >
          docker run --rm
          -v $(pwd):/wrk -w /wrk/rules/klayout/${{ matrix.pdk }}/testing
          -e PDK_ROOT="/wrk/rules/klayout"
          -e PDK='${{ matrix.pdk }}'
          "$IMAGE"
          make test-"$(python -c 'print("${{ matrix.pdk }}".upper())')"-${{ matrix.test }}
